version: 2.2

jobs:
   build-dep1-centos7:
     docker:
     # use an old image for compatibity of binaries
       - image: centos:7.2.1511
     steps:
       - checkout
       - restore_cache:
          keys: 
               - v4-dependencies
       - run:
          name: check build tools
          command: |
               set +e
               date
               bash centos7_install_build_system.sh
               source ci_build_environment_centos7.sh
               echo "environment done"
               bash check_build_environment.sh || exit 1
               cd $WORK_DIR
       - run: 
          name: build cmake
          command: |
              set +e
              source ci_build_environment_centos7.sh
              mkdir $ACT_HOME
              mkdir $EDA_SRCDIR
              for file in 00*; do echo $file; bash $file || exit 1; done
              cd $WORK_DIR
       - run: 
          name: download sources
          command: |
              set +e
              source ci_build_environment_centos7.sh
              for file in 01*; do echo $file; bash $file || exit 1; done
              cd $WORK_DIR
       - save_cache:
          key: v4-dependencies
          paths:
              - /var/cache/yum
              - src/libedit
              - src/ncurses
              - src/zlib
              - src/mit-fftw-fftw
              - cmake
       - save_cache:
          key: v4-dependencies-light
          paths:
              - /var/cache/yum
              - cmake
       - run: 
          name: package sources
          command: |
              set +e
              source ci_build_environment_centos7.sh
              for file in 02*; do echo $file; bash $file || exit 1; done
              cd $WORK_DIR       

       - run: 
          name: Install dependencies act + act FE
          command: |
              echo $ACT_HOME
              set +e
              source ci_build_environment_centos7.sh
              for file in 03*; do echo $file; bash $file || exit 1; done
              cd $WORK_DIR

       - persist_to_workspace:
          root: ./
          paths:
            - act
            - src
            - async_circuit_toolkit_sources.tar.gz
   build-dep2-centos7:
     docker:
     # use an old image for compatibity of binaries
       - image: centos:7.2.1511
     steps:
       - checkout
       - attach_workspace:
          at: ./
       - restore_cache:
          keys: 
               - v4-dependencies-light
       - run:
          name: check build tools
          command: |
               set +e
               date
               bash centos7_install_build_system.sh
               source ci_build_environment_centos7.sh
               echo "environment done"
               bash check_build_environment.sh || exit 1
               cd $WORK_DIR
       - run: 
          name: build cmake
          command: |
              set +e
              source ci_build_environment_centos7.sh
              mkdir $ACT_HOME
              mkdir $EDA_SRCDIR
              for file in 00*; do echo $file; bash $file || exit 1; done
              cd $WORK_DIR
       - run: 
          name: Install dependencies BE
          command: |
              echo $ACT_HOME
              set +e
              source ci_build_environment_centos7.sh
              for file in 04*; do echo $file; bash $file || exit 1; done
              cd $WORK_DIR
       - persist_to_workspace:
          root: ./
          paths:
            - act
            - src
            - async_circuit_toolkit_sources.tar.gz
   build-dep3-centos7:
     docker:
     # use an old image for compatibity of binaries
       - image: centos:7.2.1511
     steps:
       - checkout
       - attach_workspace:
          at: ./
       - restore_cache:
          keys: 
               - v4-dependencies-light
       - run:
          name: check build tools
          command: |
               set +e
               date
               bash centos7_install_build_system.sh
               source ci_build_environment_centos7.sh
               echo "environment done"
               bash check_build_environment.sh || exit 1
               cd $WORK_DIR
       - run: 
          name: build cmake
          command: |
              set +e
              source ci_build_environment_centos7.sh
              mkdir $ACT_HOME
              mkdir $EDA_SRCDIR
              for file in 00*; do echo $file; bash $file || exit 1; done
              cd $WORK_DIR
       - run: 
          name: Install dependencies sim
          command: |
              echo $ACT_HOME
              set +e
              source ci_build_environment_centos7.sh
              for file in 05*; do echo $file; bash $file || exit 1; done
              cd $WORK_DIR
       - persist_to_workspace:
          root: ./
          paths:
            - act
            - src
            - async_circuit_toolkit_sources.tar.gz
   build-centos7:
     docker:
     # use an old image for compatibity of binaries
       - image: centos:7.2.1511
     steps:
       - checkout
       - attach_workspace:
          at: ./
       - restore_cache:
          keys: 
               - v4-dependencies-light
       - run:
          name: check build tools
          command: |
               set +e
               date
               bash centos7_install_build_system.sh
               source ci_build_environment_centos7.sh
               echo "environment done"
               bash check_build_environment.sh || exit 1
               cd $WORK_DIR
       - run: 
          name: build cmake
          command: |
              set +e
              source ci_build_environment_centos7.sh
              mkdir $ACT_HOME
              mkdir $EDA_SRCDIR
              for file in 00*; do echo $file; bash $file || exit 1; done
              cd $WORK_DIR     
       - run: 
          name: Install act + libs
          command: |
              set +e
              source ci_build_environment_centos7.sh
              for file in 06*; do echo $file; bash $file || exit 1; done
              cd $WORK_DIR
       - run: 
          name: Install act addons FE / syntesis
          command: |
              set +e
              source ci_build_environment_centos7.sh
              for file in 07*; do echo $file; bash $file || exit 1; done
              cd $WORK_DIR
       - run: 
          name: Install act addons BE / physical design
          command: |
              set +e
              source ci_build_environment_centos7.sh
              for file in 08*; do echo $file; bash $file || exit 1; done
              cd $WORK_DIR  
       - run: 
          name: Install interact
          command: |
              set +e
              source ci_build_environment_centos7.sh
              for file in 09*; do echo $file; bash $file || exit 1; done
              cd $WORK_DIR   
       - run: 
          name: Install gui tools
          command: |
              set +e
              source ci_build_environment_centos7.sh
              source centos7_install_build_system_gui.sh
              for file in 10*; do echo $file; bash $file || exit 1; done
              cd $WORK_DIR 
       - run: 
          name: Install docs and package
          command: |
              set +e
              source ci_build_environment_centos7.sh
              for file in 11*; do echo $file; bash $file || exit 1; done
              cd $WORK_DIR     
       - run: 
          name: Test act
          command: |
              set +e
              source ci_test_environment.sh
              for file in 12*; do echo $file; bash $file || exit 1; done
              cd $WORK_DIR
       - run:
          name: Clean for persist
          command: |
              set +e
              source ci_build_environment_centos7.sh
              cd $EDA_SRCDIR/yale-asyncvlsi-act
              make realclean 2> /dev/null
              cd $EDA_SRCDIR/yale-asyncvlsi-chp2prs
              make realclean 2> /dev/null
              cd $WORK_DIR
       - persist_to_workspace:
          root: ./
          paths:
            - src/yale-asyncvlsi-act
            - src/yale-asyncvlsi-chp2prs
            - src/yale-asyncvlsi-actsim
            - async_circuit_toolkit_sources.tar.gz
            - async_circuit_toolkit.tar.gz      
# package and upload
   upload-centos7:
     docker:
       - image: centos:7
     resource_class: small
     steps:
       - checkout
       - attach_workspace:
          at: ./
       - run: 
          name: upload
          command: |
              set +e
              source ci_build_environment_centos7.sh
              for file in 13*; do echo $file; bash $file || exit 1; done
              cd $WORK_DIR   

   test-centos7:
     docker:
       - image: centos:7.2.1511
     resource_class: small
     steps:
       - checkout
       - attach_workspace:
          at: ./
       - run: 
          name: install test runner
          command: |
               yum install -y make
       - run: 
          name: Test act
          command: |
              set +e
              tar -xf async_circuit_toolkit.tar.gz
              source ci_test_environment.sh
              for file in 12*; do echo $file; bash $file || exit 1; done
              cd $WORK_DIR
              
   test-rhel8:
     docker:
       - image: rockylinux/rockylinux:8
     resource_class: small
     steps:
       - checkout
       - run: 
          name: install test runner
          command: |
                  yum install -y 'dnf-command(config-manager)'
                  yum config-manager --set-enabled powertools -y
                  # cmp (diffutils) and make are required for running tests 
                  yum install -y make diffutils gzip tar
       - attach_workspace:
          at: ./
       - run: 
          name: Test act
          command: |
              set +e
              tar -xf async_circuit_toolkit.tar.gz
              source ci_test_environment.sh
              for file in 12*; do echo $file; bash $file || exit 1; done
              cd $WORK_DIR
              
   test-opensuse15:
     docker:
       - image: opensuse/leap:15
     resource_class: small
     steps:
       - checkout
       - run: 
          name: install test runner
          command: |
                  zypper in -y make tar gzip
       - attach_workspace:
          at: ./
       - run: 
          name: Test act
          command: |
              set +e
              tar -xf async_circuit_toolkit.tar.gz
              source ci_test_environment.sh
              for file in 12*; do echo $file; bash $file || exit 1; done
              cd $WORK_DIR
              
   test-ubuntu18:
     docker:
       - image: ubuntu:18.04
     resource_class: small
     steps:
       - checkout
       - attach_workspace:
          at: ./
       - run: 
          name: install test runner
          command: |
            apt-get -q update -y
                apt-get -q install -y make
       - run: 
          name: Test act
          command: |
              set +e
              tar -xf async_circuit_toolkit.tar.gz
              source ci_test_environment.sh
              for file in 12*; do echo $file; bash $file || exit 1; done
              cd $WORK_DIR
              
   test-ubuntu20:
     docker:
       - image: ubuntu:20.04
     resource_class: small
     steps:
       - checkout
       - attach_workspace:
          at: ./
       - run: 
          name: install test runner
          command: |
                apt-get -q update -y
                apt-get -q install -y make
       - run: 
          name: Test act
          command: |
              set +e
              tar -xf async_circuit_toolkit.tar.gz
              source ci_test_environment.sh
              for file in 12*; do echo $file; bash $file || exit 1; done
              cd $WORK_DIR
              
   test-ubuntu22:
     docker:
       - image: ubuntu:22.04
     resource_class: small
     steps:
       - checkout
       - attach_workspace:
          at: ./
       - run: 
          name: install test runner
          command: |
                apt-get -q update -y
                apt-get -q install -y make
       - run: 
          name: Test act
          command: |
              set +e
              tar -xf async_circuit_toolkit.tar.gz
              source ci_test_environment.sh
              for file in 12*; do echo $file; bash $file || exit 1; done
              cd $WORK_DIR
              
   test-ubuntu16:
     docker:
       - image: ubuntu:16.04
     resource_class: small
     steps:
       - checkout
       - attach_workspace:
          at: ./
       - run: 
          name: install test runner
          command: |
                apt-get -q update -y
                apt-get -q install -y make
       - run: 
          name: Test act
          command: |
              set +e
              tar -xf async_circuit_toolkit.tar.gz
              source ci_test_environment.sh
              for file in 12*; do echo $file; bash $file || exit 1; done
              cd $WORK_DIR
              
   test-debian-stable:
     docker:
       - image: debian:stable
     resource_class: small
     steps:
       - checkout
       - attach_workspace:
          at: ./
       - run: 
          name: install test runner
          command: |
                apt-get -q update -y
                apt-get -q install -y make
       - run: 
          name: Test act
          command: |
              set +e
              tar -xf async_circuit_toolkit.tar.gz
              source ci_test_environment.sh
              for file in 12*; do echo $file; bash $file || exit 1; done
              cd $WORK_DIR

   test-debian-oldstable:
     docker:
       - image: debian:oldstable
     resource_class: small
     steps:
       - checkout
       - attach_workspace:
          at: ./
       - run: 
          name: install test runner
          command: |
                apt-get -q update -y
                apt-get -q install -y make
       - run: 
          name: Test act
          command: |
              set +e
              tar -xf async_circuit_toolkit.tar.gz
              source ci_test_environment.sh
              for file in 12*; do echo $file; bash $file || exit 1; done
              cd $WORK_DIR
              
   test-debian-oldoldstable:
     docker:
       - image: debian:oldoldstable
     resource_class: small
     steps:
       - checkout
       - attach_workspace:
          at: ./
       - run: 
          name: install test runner
          command: |
                apt-get -q update -y
                apt-get -q install -y make
       - run: 
          name: Test act
          command: |
              set +e
              tar -xf async_circuit_toolkit.tar.gz
              source ci_test_environment.sh
              for file in 12*; do echo $file; bash $file || exit 1; done
              cd $WORK_DIR   
              
   test-fedora-20:
     docker:
       - image: fedora:20
     resource_class: small
     steps:
       - checkout
       - attach_workspace:
          at: ./
       - run: 
          name: install test runner
          command: |
                yum install -y make
       - run: 
          name: Test act
          command: |
              set +e
              tar -xf async_circuit_toolkit.tar.gz
              source ci_test_environment.sh
              for file in 12*; do echo $file; bash $file || exit 1; done
              cd $WORK_DIR 
              
   test-fedora-latest:
     docker:
       - image: fedora:latest
     resource_class: small
     steps:
       - checkout
       - attach_workspace:
          at: ./
       - run: 
          name: install test runner
          command: |
                dnf install -y make diffutils
       - run: 
          name: Test act
          command: |
              set +e
              tar -xf async_circuit_toolkit.tar.gz
              source ci_test_environment.sh
              for file in 12*; do echo $file; bash $file || exit 1; done
              cd $WORK_DIR 
              
   test-archlinux:
     docker:
       - image: archlinux/archlinux:latest
     resource_class: small
     steps:
       - checkout
       - attach_workspace:
          at: ./
       - run: 
          name: install test runner
          command: |
              pacman-key --init
              pacman --noconfirm -Syy
              # cmp (diffutils) and make are required for running tests
              pacman --noconfirm -S make diffutils
       - run: 
          name: Test act
          command: |
              set +e
              tar -xf async_circuit_toolkit.tar.gz
              source ci_test_environment.sh
              for file in 12*; do echo $file; bash $file || exit 1; done
              cd $WORK_DIR  
                       
   test-alpine:
     docker:
       - image: alpine:latest
     resource_class: small
     steps:
       - checkout
       - attach_workspace:
          at: ./
       - run: 
          name: install test runner
          command: |
              apk update
              apk add bash make sed
       - run: 
          name: Test act
          command: |
              set +e
              tar -xf async_circuit_toolkit.tar.gz
              source ci_test_environment.sh
              for file in 12*; do echo $file; bash $file || exit 1; done
              cd $WORK_DIR

workflows:
   version: 2
   build:
     jobs: 
        -  build-dep1-centos7
        -  build-dep2-centos7:
             requires:
               - build-dep1-centos7
        -  build-dep3-centos7:
             requires:
               - build-dep2-centos7
        -  build-centos7:
             requires:
               - build-dep3-centos7
        -  test-centos7:
             requires:
               - build-centos7
        -  test-rhel8:
             requires:
               - build-centos7
        -  test-debian-stable:
             requires:
               - build-centos7
        -  test-debian-oldstable:
             requires:
               - build-centos7
        -  test-debian-oldoldstable:
             requires:
               - build-centos7
        -  test-ubuntu22:
             requires:
               - build-centos7
        -  test-ubuntu20:
             requires:
               - build-centos7   
        -  test-ubuntu18:
             requires:
               - build-centos7
        -  test-ubuntu16:
             requires:
               - build-centos7  
        -  test-opensuse15:
             requires:
               - build-centos7 
        -  test-archlinux:
             requires:
               - build-centos7 
        -  test-fedora-20:
             requires:
               - build-centos7 
        -  test-fedora-latest:
             requires:
               - build-centos7
        -  upload-centos7:
             requires:
               - build-centos7
               - test-centos7
               - test-rhel8
               - test-debian-stable
               - test-debian-oldstable
               - test-debian-oldoldstable
               - test-ubuntu22
               - test-ubuntu20
               - test-ubuntu18
               - test-ubuntu16
               - test-opensuse15
               - test-archlinux
               - test-fedora-20
               - test-fedora-latest
               
        # for testing fully lib independed only libc
        #-  test-alpine:
        #     requires:
        #       - build-centos7  
               
   nightly:
    triggers:
     - schedule:
         # Every day, 0421Z.
         cron: "30 6 * * *"
         filters:
           branches:
             only:
               - main
    jobs:     
        -  build-dep1-centos7
        -  build-dep2-centos7:
             requires:
               - build-dep1-centos7
        -  build-dep3-centos7:
             requires:
               - build-dep2-centos7
        -  build-centos7:
             requires:
               - build-dep3-centos7
        -  test-centos7:
             requires:
               - build-centos7
        -  test-rhel8:
             requires:
               - build-centos7
        -  test-debian-stable:
             requires:
               - build-centos7
        -  test-debian-oldstable:
             requires:
               - build-centos7
        -  test-debian-oldoldstable:
             requires:
               - build-centos7
        -  test-ubuntu22:
             requires:
               - build-centos7
        -  test-ubuntu20:
             requires:
               - build-centos7   
        -  test-ubuntu18:
             requires:
               - build-centos7
        -  test-ubuntu16:
             requires:
               - build-centos7  
        -  test-opensuse15:
             requires:
               - build-centos7 
        -  test-archlinux:
             requires:
               - build-centos7 
        -  test-fedora-20:
             requires:
               - build-centos7 
        -  test-fedora-latest:
             requires:
               - build-centos7        
        -  upload-centos7:
             requires:
               - build-centos7
               - test-centos7
               - test-rhel8
               - test-debian-stable
               - test-debian-oldstable
               - test-debian-oldoldstable
               - test-ubuntu22
               - test-ubuntu20
               - test-ubuntu18
               - test-ubuntu16
               - test-opensuse15
               - test-archlinux
               - test-fedora-20
               - test-fedora-latest
        
